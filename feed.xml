<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://fauzisho.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://fauzisho.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-03-20T08:32:36+00:00</updated><id>https://fauzisho.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Automated vs. Autonomous Systems for Algorithmic Trading</title><link href="https://fauzisho.github.io/blog/2023/automated-vs-autonomous-systems-for-algorithmic-trading/" rel="alternate" type="text/html" title="Automated vs. Autonomous Systems for Algorithmic Trading"/><published>2023-10-03T00:09:28+00:00</published><updated>2023-10-03T00:09:28+00:00</updated><id>https://fauzisho.github.io/blog/2023/automated-vs-autonomous-systems-for-algorithmic-trading</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/automated-vs-autonomous-systems-for-algorithmic-trading/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[Algorithmic trading has become increasingly popular in finance due to its ability to quickly analyze data and execute trades&#x2026;Continue reading on Medium »]]></summary></entry><entry><title type="html">Writing platform-agnostic network code in Kotlin Multiplatform</title><link href="https://fauzisho.github.io/blog/2023/writing-platform-agnostic-network-code-in-kotlin-multiplatform/" rel="alternate" type="text/html" title="Writing platform-agnostic network code in Kotlin Multiplatform"/><published>2023-04-23T16:14:45+00:00</published><updated>2023-04-23T16:14:45+00:00</updated><id>https://fauzisho.github.io/blog/2023/writing-platform-agnostic-network-code-in-kotlin-multiplatform</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/writing-platform-agnostic-network-code-in-kotlin-multiplatform/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Test-Driven Development with Kotlin Multiplatform Mobile: Enhancing Code Quality and Reliability</title><link href="https://fauzisho.github.io/blog/2023/test-driven-development-with-kotlin-multiplatform-mobile-enhancing-code-quality-and-reliability/" rel="alternate" type="text/html" title="Test-Driven Development with Kotlin Multiplatform Mobile: Enhancing Code Quality and Reliability"/><published>2023-04-22T16:02:15+00:00</published><updated>2023-04-22T16:02:15+00:00</updated><id>https://fauzisho.github.io/blog/2023/test-driven-development-with-kotlin-multiplatform-mobile-enhancing-code-quality-and-reliability</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/test-driven-development-with-kotlin-multiplatform-mobile-enhancing-code-quality-and-reliability/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Choosing the Right Cross-Platform Framework in 2023: A Comprehensive Comparison with Native…</title><link href="https://fauzisho.github.io/blog/2023/choosing-the-right-cross-platform-framework-in-2023-a-comprehensive-comparison-with-native/" rel="alternate" type="text/html" title="Choosing the Right Cross-Platform Framework in 2023: A Comprehensive Comparison with Native…"/><published>2023-04-21T23:50:52+00:00</published><updated>2023-04-21T23:50:52+00:00</updated><id>https://fauzisho.github.io/blog/2023/choosing-the-right-cross-platform-framework-in-2023-a-comprehensive-comparison-with-native</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/choosing-the-right-cross-platform-framework-in-2023-a-comprehensive-comparison-with-native/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Refreshing onNewIntent with Jetpack Compose</title><link href="https://fauzisho.github.io/blog/2023/refreshing-onnewintent-with-jetpack-compose/" rel="alternate" type="text/html" title="Refreshing onNewIntent with Jetpack Compose"/><published>2023-04-19T05:48:52+00:00</published><updated>2023-04-19T05:48:52+00:00</updated><id>https://fauzisho.github.io/blog/2023/refreshing-onnewintent-with-jetpack-compose</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/refreshing-onnewintent-with-jetpack-compose/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Exploring Delegation Interface in Kotlin with Jetpack Compose</title><link href="https://fauzisho.github.io/blog/2023/exploring-delegation-interface-in-kotlin-with-jetpack-compose/" rel="alternate" type="text/html" title="Exploring Delegation Interface in Kotlin with Jetpack Compose"/><published>2023-04-12T16:40:03+00:00</published><updated>2023-04-12T16:40:03+00:00</updated><id>https://fauzisho.github.io/blog/2023/exploring-delegation-interface-in-kotlin-with-jetpack-compose</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/exploring-delegation-interface-in-kotlin-with-jetpack-compose/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Applying Modularization Principles from Ontology Engineering to Enhance Software Development: A…</title><link href="https://fauzisho.github.io/blog/2023/applying-modularization-principles-from-ontology-engineering-to-enhance-software-development-a/" rel="alternate" type="text/html" title="Applying Modularization Principles from Ontology Engineering to Enhance Software Development: A…"/><published>2023-04-11T21:15:47+00:00</published><updated>2023-04-11T21:15:47+00:00</updated><id>https://fauzisho.github.io/blog/2023/applying-modularization-principles-from-ontology-engineering-to-enhance-software-development-a</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/applying-modularization-principles-from-ontology-engineering-to-enhance-software-development-a/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Improving Temporal Specifications in Android Development: An Anti-Patterns Approach</title><link href="https://fauzisho.github.io/blog/2023/improving-temporal-specifications-in-android-development-an-anti-patterns-approach/" rel="alternate" type="text/html" title="Improving Temporal Specifications in Android Development: An Anti-Patterns Approach"/><published>2023-04-11T08:56:11+00:00</published><updated>2023-04-11T08:56:11+00:00</updated><id>https://fauzisho.github.io/blog/2023/improving-temporal-specifications-in-android-development-an-anti-patterns-approach</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/improving-temporal-specifications-in-android-development-an-anti-patterns-approach/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Exploring Android Automotive’s HMI Notifications: A Deep Dive into Heads-Up Notifications</title><link href="https://fauzisho.github.io/blog/2023/exploring-android-automotives-hmi-notifications-a-deep-dive-into-heads-up-notifications/" rel="alternate" type="text/html" title="Exploring Android Automotive’s HMI Notifications: A Deep Dive into Heads-Up Notifications"/><published>2023-04-10T09:29:01+00:00</published><updated>2023-04-10T09:29:01+00:00</updated><id>https://fauzisho.github.io/blog/2023/exploring-android-automotives-hmi-notifications-a-deep-dive-into-heads-up-notifications</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/exploring-android-automotives-hmi-notifications-a-deep-dive-into-heads-up-notifications/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Self-Admitted Technical Debt (SATD) in Android Apps: An Overview and Example</title><link href="https://fauzisho.github.io/blog/2023/self-admitted-technical-debt-satd-in-android-apps-an-overview-and-example/" rel="alternate" type="text/html" title="Self-Admitted Technical Debt (SATD) in Android Apps: An Overview and Example"/><published>2023-04-08T16:30:34+00:00</published><updated>2023-04-08T16:30:34+00:00</updated><id>https://fauzisho.github.io/blog/2023/self-admitted-technical-debt-satd-in-android-apps-an-overview-and-example</id><content type="html" xml:base="https://fauzisho.github.io/blog/2023/self-admitted-technical-debt-satd-in-android-apps-an-overview-and-example/"><![CDATA[]]></content><author><name></name></author></entry></feed>